{"remainingRequest":"/Users/ramtinhafezinejad/Desktop/FNT-FRONTEND/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/ramtinhafezinejad/Desktop/FNT-FRONTEND/src/components/Twitter/Sigmagraph.vue?vue&type=style&index=0&id=18ea8613&scoped=true&lang=css","dependencies":[{"path":"/Users/ramtinhafezinejad/Desktop/FNT-FRONTEND/src/components/Twitter/Sigmagraph.vue","mtime":1618504832000},{"path":"/Users/ramtinhafezinejad/Desktop/FNT-FRONTEND/node_modules/css-loader/dist/cjs.js","mtime":1619426455094},{"path":"/Users/ramtinhafezinejad/Desktop/FNT-FRONTEND/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":1619426455942},{"path":"/Users/ramtinhafezinejad/Desktop/FNT-FRONTEND/node_modules/postcss-loader/src/index.js","mtime":1619426455687},{"path":"/Users/ramtinhafezinejad/Desktop/FNT-FRONTEND/node_modules/cache-loader/dist/cjs.js","mtime":1619426444794},{"path":"/Users/ramtinhafezinejad/Desktop/FNT-FRONTEND/node_modules/vue-loader-v16/dist/index.js","mtime":1619426455942}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgouY2hhcnRoZWFkZXJ7CiAgICBoZWlnaHQ6IDQ1cHg7CiAgICBkaXNwbGF5OiBmbGV4Owp9Ci5jaGFydGhlYWRlciBoM3sKICAgIGZvbnQtd2VpZ2h0OiA5MDA7CiAgICBmb250LXNpemU6IDEuMjVlbTsKICAgIGxpbmUtaGVpZ2h0OiAxLjU7Cn0KCi5ub2RlLXRleHQgewogIG9wYWNpdHk6IDA7Cn0KLnRleHQtYWN0aXZlIHsKICBvcGFjaXR5OiAxOwp9Ci5ub2RlX2NvbnRhaW5lcnsKICBib3JkZXI6IDFweCBzb2xpZCAjZGRkZmVhOwogIGFsaWduLWl0ZW1zOiBjZW50ZXI7CiAgaGVpZ2h0OiA0NTBweDsKICBwYWRkaW5nLXRvcDogMjVweDsKICBwYWRkaW5nLWxlZnQ6IDU1cHg7CiAgCn0KCi5ncmFwaHsKcGFkZGluZy1sZWZ0OiAzMHB4OwoKfQoKLmhlYWRlcnsKICBkaXNwbGF5OiBmbGV4OwogIHBhZGRpbmc6IDEwcHg7CiAgZm9udC1mYW1pbHk6IFF1aWNrc2FuZCxIZWx2ZXRpY2EsQXJpYWwsc2Fucy1zZXJpZjsKICBmb250LXdlaWdodDogOTAwOwogIGZvbnQtc2l6ZTogMS4yNWVtOwogIGxpbmUtaGVpZ2h0OiAxLjU7CiAgY29sb3I6ICMyNjI5M2M7Cn0KCg=="},{"version":3,"sources":["/Users/ramtinhafezinejad/Desktop/FNT-FRONTEND/src/components/Twitter/Sigmagraph.vue"],"names":[],"mappings":";;AAiLA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACjB;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;IACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACpB;;AAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;AACZ;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;AACZ;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;EACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;;AAEpB;;AAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;;AAElB;;AAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACjD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EAChB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB","file":"/Users/ramtinhafezinejad/Desktop/FNT-FRONTEND/src/components/Twitter/Sigmagraph.vue","sourceRoot":"","sourcesContent":["<template>\n\n<div class=\"node_box\">\n \n    <div class=\"chartheader\">\n      <h3>Node network</h3>\n            <div class=\"help-tip-container\">\n                <div class=\"help-tip\">\n                    <p>The top posts is the 3 tweets with the most retweets. The reason it is sorted by retweets and not likes is because more retweets means a wider reach.</p>\n                </div>\n            </div>\n    </div>\n\n<div class=\"node_container\">\n<div id=\"graph\">\n  <svg xmlns=\"http://www.w3.org/2000/svg\" \n       :width=\"width+'px'\"\n       :height=\"height+'px'\"\n       @mousemove=\"drag($event)\"\n       @mouseup=\"drop()\"\n       v-if=\"bounds.minX\"\n       :messages=\"{empty: 'No data'}\"\n       >\n    \n    <line v-for=\"link in graph.links\"\n          :x1=\"coords[link.source.index].x\"\n          :y1=\"coords[link.source.index].y\"\n          :x2=\"coords[link.target.index].x\"\n          :y2=\"coords[link.target.index].y\"\n          stroke=\"#aaa\" stroke-width=\"1\" v-bind:key=\"link\"/>\n\n    <g class=\"item\" transform=\"translate(0, 0)\" v-for=\"(node, i) in graph.nodes\"\n    :key=\"i\"\n    > \n      <circle class=\"node circle-node\" \n              :cx=\"coords[i].x\"\n              :cy=\"coords[i].y\"\n              :r=\"graph.nodes[i].size\" :fill=\"colors[Math.ceil(Math.sqrt(node.index))]\"\n              stroke=\"white\" stroke-width=\"1\"\n              @mousedown=\"currentMove = {x: $event.screenX, y: $event.screenY, node: node}\" v-bind:key=\"i\"\n            \n              />\n      <text\n      class=\"node-text\"\n      :x=\"coords[i].x\"\n      :y=\"coords[i].y\"\n      @mouseover=\"showIndex = i\"\n      @click=\"gotowebpage(node.id)\"\n      :class=\"{'text-active': showIndex === i}\"\n      >{{node.id}}</text>\n    </g>\n  </svg>\n</div>\n</div>\n\n</div>\n</template>\n\n\n<script>\nimport * as d3 from \"d3\";\n\nexport default {\n  el: \"#graph\",\n  props:['listdata'],\n  data: function(){\n    return{\n    graph: {\n      nodes: this.listdata.nodes,\n      links: this.listdata.links\n    },\n    width: 500,\n    height: 400,\n    padding: 20,\n    colors: ['#696969','#696969','#696969','#696969','#696969','#696969','#696969','#696969', '#696969', '#696969', '#696969', '#696969', '#696969', '#696969', '#696969', '#696969'],\n    simulation: null,\n    currentMove: null,\n    label: null,\n    showIndex: 0\n    }\n  },\n  computed: {\n    nodes(){\n      console.log(this.listdata.nodes)\n      console.log(this.listdata.links)\n      //this.changenodes(this.$store.state.nodes)\n      //return this.$store.state.nodes\n      return {}\n    },\n    links(){\n      //this.changelinks(this.$store.state.links)\n      //return this.$store.state.links\n      return {}\n    },\n    bounds() {\n      return {\n        minX: Math.min(...this.graph.nodes.map(n => n.x)),\n        maxX: Math.max(...this.graph.nodes.map(n => n.x)),\n        minY: Math.min(...this.graph.nodes.map(n => n.y)),\n        maxY: Math.max(...this.graph.nodes.map(n => n.y))\n      }\n    },\n    coords() {\n      return this.graph.nodes.map(node => {\n        return {\n          x: this.padding + (node.x - this.bounds.minX) * (this.width - 5*this.padding) / (this.bounds.maxX - this.bounds.minX),\n          y: this.padding + (node.y - this.bounds.minY) * (this.height - 2*this.padding) / (this.bounds.maxY - this.bounds.minY)\n        }\n      })\n    }   \n  },\n  created(){\n     this.simulation = d3.forceSimulation(this.graph.nodes)\n        .force('charge', d3.forceManyBody().strength(-100))\n        .force('link', d3.forceLink(this.graph.links).id(function(d) { return d.id;}))\n        .force('x', d3.forceX())\n        .force('y', d3.forceY())\n    this.createTextNodes() \n  },\n  methods: {\n    drag(e) {\n      if (this.currentMove) {\n        this.currentMove.node.fx = this.currentMove.node.x - (this.currentMove.x - e.screenX) * (this.bounds.maxX - this.bounds.minX) / (this.width - 2 * this.padding)\n        this.currentMove.node.fy = this.currentMove.node.y -(this.currentMove.y - e.screenY) * (this.bounds.maxY - this.bounds.minY) / (this.height - 2 * this.padding)\n        this.currentMove.x = e.screenX\n        this.currentMove.y = e.screenY\n      }\n    },\n    drop(){\n      delete this.currentMove.node.fx\n      delete this.currentMove.node.fy    \n      this.currentMove = null\n      this.simulation.alpha(1)\n      this.simulation.restart()\n    },\n    changenodes(newnodes){\n      this.graph.nodes = newnodes\n    },\n    changelinks(newlinks){\n      this.graph.links = newlinks\n      \n    },\n    addLabel(nodes){\n      for (let i in nodes){\n        nodes[i].append(\"text\")\n        .text(function(d) {\n        return d.id;\n      })\n      .attr('x', 6)\n      .attr('y', 3);\n      }\n    },\n    createTextNodes() {\n      let nodes = d3.selectAll(\"circle\");\n      console.log(nodes);\n      if (nodes.length > 0) {\n        nodes.forEach(node => {\n        let n = node.append(\"svg\").attr(\"width\", 10).attr(\"height\", 10); \n        n.append(\"text\")\n        .attr('x', 10)\n        .attr('y', 10)\n        .attr('stroke', 'green')\n        .style(\"font-size\", 11)\n        .text(\"text\")\n      });  \n      }\n    },\n    gotowebpage(username){\n      window.open(`https://www.twitter.com/${username}`)\n    }\n  }\n}\n\n</script>\n\n<style scoped>\n\n.chartheader{\n    height: 45px;\n    display: flex;\n}\n.chartheader h3{\n    font-weight: 900;\n    font-size: 1.25em;\n    line-height: 1.5;\n}\n\n.node-text {\n  opacity: 0;\n}\n.text-active {\n  opacity: 1;\n}\n.node_container{\n  border: 1px solid #dddfea;\n  align-items: center;\n  height: 450px;\n  padding-top: 25px;\n  padding-left: 55px;\n  \n}\n\n.graph{\npadding-left: 30px;\n\n}\n\n.header{\n  display: flex;\n  padding: 10px;\n  font-family: Quicksand,Helvetica,Arial,sans-serif;\n  font-weight: 900;\n  font-size: 1.25em;\n  line-height: 1.5;\n  color: #26293c;\n}\n\n</style>"]}]}