{"remainingRequest":"/Users/ramtinhafezinejad/Documents/Bachelor/Saman/Ramtin-Saman-Vue/forgerynewstrackervue/frontend/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/ramtinhafezinejad/Documents/Bachelor/Saman/Ramtin-Saman-Vue/forgerynewstrackervue/frontend/src/components/Reddit/WordCloudReddit.vue?vue&type=template&id=b6fa7830&scoped=true","dependencies":[{"path":"/Users/ramtinhafezinejad/Documents/Bachelor/Saman/Ramtin-Saman-Vue/forgerynewstrackervue/frontend/src/components/Reddit/WordCloudReddit.vue","mtime":1618504832000},{"path":"/Users/ramtinhafezinejad/Documents/Bachelor/Saman/Ramtin-Saman-Vue/forgerynewstrackervue/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1619426444794},{"path":"/Users/ramtinhafezinejad/Documents/Bachelor/Saman/Ramtin-Saman-Vue/forgerynewstrackervue/frontend/node_modules/babel-loader/lib/index.js","mtime":1619426444695},{"path":"/Users/ramtinhafezinejad/Documents/Bachelor/Saman/Ramtin-Saman-Vue/forgerynewstrackervue/frontend/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1619426455942},{"path":"/Users/ramtinhafezinejad/Documents/Bachelor/Saman/Ramtin-Saman-Vue/forgerynewstrackervue/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1619426444794},{"path":"/Users/ramtinhafezinejad/Documents/Bachelor/Saman/Ramtin-Saman-Vue/forgerynewstrackervue/frontend/node_modules/vue-loader-v16/dist/index.js","mtime":1619426455942}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Cgo8ZGl2IGNsYXNzPSJlbnRpcmVfY29udGFpbmVyIj4KICA8ZGl2IGNsYXNzPSJjaGFydGhlYWRlciI+CiAgICAgIDxoMz5Qb3B1bGFyIFN1YnJlZGRpdHM8L2gzPgogICAgICA8ZGl2IGNsYXNzPSJoZWxwLXRpcC1jb250YWluZXIiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iaGVscC10aXAiPgogICAgICAgICAgICAgICAgICAgIDxwPlRoZSB0b3Agc3VicmVkZGl0cyBhcmUgZGlzcGxheWVkIGhlcmUsIHRoZSBzaXplIG9mIHRoZSBzdWJyZWRkaXQgaXMgcmVsYXRpdmUgdG8gaG93IG1hbnkgcG9zdHMgZnJvbSB0aGUgc2VsZWN0ZWQgcXVlcnkgYXJlIHBvc3RlZCBpbiB0aGUgc3VicmVkZGl0LiAKICAgICAgICAgICAgICAgICAgICAgICAgWW91IGNhbiBjbGljayBhbnkgb2YgdGhlIHN1YnJlZGRpdHMgdG8gY2hlY2sgb3V0IHRoZSBzdWJyZWRkaXQgaW4gUmVkZGl0LgogICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgIDwvZGl2PgogIDxkaXYgY2xhc3M9InRvcHBvc3RzYm94Ij4KICAgICAgICA8ZGl2IGNsYXNzPSJ0b3Bwb3N0c3dyYXBwZXIiPgogICAgICAgICAgPGRpdiBjbGFzcz0icG9zdHJvdyI+CiAgICAgICAgICAgIAogICAgICAgICAgICA8dWwgY2xhc3M9ImNsb3VkIiByb2xlPSJuYXZpZ2F0aW9uIiBhcmlhLWxhYmVsPSJXZWJkZXYgd29yZCBjbG91ZCI+CiAgICAgICAgICAgICAgICA8bGkgdi1mb3I9IihlbnRyeSwgaW5kZXgpIGluIGxpc3RkYXRhIiB2LWJpbmQ6a2V5PSJpbmRleCIgQGNsaWNrPSJnb3RvcG9zdChsaXN0ZGF0YVtpbmRleF1bJ3N1YnJlZGRpdCddKSI+PGEgOmRhdGEtd2VpZ2h0PSJsaXN0ZGF0YVtpbmRleF1bJ3ZhbHVlJ10iPnt7bGlzdGRhdGFbaW5kZXhdWyJzdWJyZWRkaXQiXX19PC9hPjwvbGk+CiAgICAgICAgICAgIDwvdWw+CgogICAgICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KICA8L2Rpdj4KPC9kaXY+CiAgIAo="},{"version":3,"sources":["/Users/ramtinhafezinejad/Documents/Bachelor/Saman/Ramtin-Saman-Vue/forgerynewstrackervue/frontend/src/components/Reddit/WordCloudReddit.vue"],"names":[],"mappings":";;AAEA,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC3B,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAC1B,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACrB,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACjwBACjJ,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC5E,CAAC,CAAC,CAAC;gBACP,CAAC,CAAC,CAAC,CAAC,CAAC;YACT,CAAC,CAAC,CAAC,CAAC,CAAC;IACb,CAAC,CAAC,CAAC,CAAC,CAAC;EACP,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAClB,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UAC1B,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;YAElB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gjM,CAAC,CAAC,CAAC,CAAC;;UAEN,CAAC,CAAC,CAAC,CAAC,CAAC;IACX,CAAC,CAAC,CAAC,CAAC,CAAC;EACP,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC,CAAC","file":"/Users/ramtinhafezinejad/Documents/Bachelor/Saman/Ramtin-Saman-Vue/forgerynewstrackervue/frontend/src/components/Reddit/WordCloudReddit.vue","sourceRoot":"","sourcesContent":["<template>\n\n<div class=\"entire_container\">\n  <div class=\"chartheader\">\n      <h3>Popular Subreddits</h3>\n      <div class=\"help-tip-container\">\n                <div class=\"help-tip\">\n                    <p>The top subreddits are displayed here, the size of the subreddit is relative to how many posts from the selected query are posted in the subreddit. \n                        You can click any of the subreddits to check out the subreddit in Reddit.\n                    </p>\n                </div>\n            </div>\n    </div>\n  <div class=\"toppostsbox\">\n        <div class=\"toppostswrapper\">\n          <div class=\"postrow\">\n            \n            <ul class=\"cloud\" role=\"navigation\" aria-label=\"Webdev word cloud\">\n                <li v-for=\"(entry, index) in listdata\" v-bind:key=\"index\" @click=\"gotopost(listdata[index]['subreddit'])\"><a :data-weight=\"listdata[index]['value']\">{{listdata[index][\"subreddit\"]}}</a></li>\n            </ul>\n\n          </div>\n    </div>\n  </div>\n</div>\n   \n</template>\n\n<script>\nexport default {\n    name: \"topPosts\",\n    props:['listdata'],\n    methods:{\n      gotopost(id){\n        window.open(`https://www.reddit.com/r/${id}`)\n      }\n    } \n}\n</script>\n\n<style scoped>\n\n.entire_container{\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  \n}\n\n.toppostsbox{\n  border: 1px solid #dddfea;\n  padding: 20px;\n  height: 100%;\n}\n\n.postrow{\n  width: 600px;\n  font-family: tiempos headline,Georgia,times new roman,Times,serif;\n}\n\n.chartheader{\n    height: 45px;\n    display: flex;\n}\n.chartheader h3{\n    font-weight: 900;\n    font-size: 1.25em;\n    line-height: 1.5;\n}\n\n\nul.cloud {\n  list-style: none;\n  padding-left: 0;\n  padding-top: 75px;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: center;\n}\n\nul.cloud a {\n  --size: 4;\n  --color: #a33;\n  color: var(--color);\n  font-size: calc(var(--size) * 0.25rem + 0.5rem);\n  display: block;\n  padding: 0.125rem 0.25rem;\n  position: relative;\n  text-decoration: none;\n}\n\nul.cloud a[data-weight=\"1\"] { --size: 4; }\nul.cloud a[data-weight=\"2\"] { --size: 6; }\nul.cloud a[data-weight=\"3\"] { --size: 8; }\nul.cloud a[data-weight=\"4\"] { --size: 10; }\nul.cloud a[data-weight=\"5\"] { --size: 13; }\n\n\nul[data-show-value] a::after {\n  content: \" (\" attr(data-weight) \")\";\n  font-size: 1rem;\n}\n\nul.cloud li:nth-child(2n+1) a { --color: #181; }\nul.cloud li:nth-child(3n+1) a { --color: #33a; }\nul.cloud li:nth-child(4n+1) a { --color: #c38; }\n\nul.cloud a:focus {\n  outline: 1px dashed;\n}\n\nul.cloud a::before {\n  content: \"\";\n  position: absolute;\n  top: 0;\n  left: 50%;\n  width: 0;\n  height: 100%;\n  background: var(--color);\n  transform: translate(-50%, 0);\n  opacity: 0.15;\n  transition: width 0.25s;\n}\n\nul.cloud a:focus::before,\nul.cloud a:hover::before {\n  width: 100%;\n}\n\n@media (prefers-reduced-motion) {\n  ul.cloud * {\n    transition: none !important;\n  }\n}\n\n</style>"]}]}