{"remainingRequest":"/Users/ramtinhafezinejad/Documents/Bachelor/Saman/Ramtin-Saman-Vue/forgerynewstrackervue/frontend/node_modules/babel-loader/lib/index.js!/Users/ramtinhafezinejad/Documents/Bachelor/Saman/Ramtin-Saman-Vue/forgerynewstrackervue/frontend/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/Users/ramtinhafezinejad/Documents/Bachelor/Saman/Ramtin-Saman-Vue/forgerynewstrackervue/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/ramtinhafezinejad/Documents/Bachelor/Saman/Ramtin-Saman-Vue/forgerynewstrackervue/frontend/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/ramtinhafezinejad/Documents/Bachelor/Saman/Ramtin-Saman-Vue/forgerynewstrackervue/frontend/src/views/LandingPage.vue?vue&type=template&id=1c0d9c08&scoped=true","dependencies":[{"path":"/Users/ramtinhafezinejad/Documents/Bachelor/Saman/Ramtin-Saman-Vue/forgerynewstrackervue/frontend/src/views/LandingPage.vue","mtime":1619468069009},{"path":"/Users/ramtinhafezinejad/Documents/Bachelor/Saman/Ramtin-Saman-Vue/forgerynewstrackervue/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1619426444794},{"path":"/Users/ramtinhafezinejad/Documents/Bachelor/Saman/Ramtin-Saman-Vue/forgerynewstrackervue/frontend/node_modules/babel-loader/lib/index.js","mtime":1619426444695},{"path":"/Users/ramtinhafezinejad/Documents/Bachelor/Saman/Ramtin-Saman-Vue/forgerynewstrackervue/frontend/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1619426455942},{"path":"/Users/ramtinhafezinejad/Documents/Bachelor/Saman/Ramtin-Saman-Vue/forgerynewstrackervue/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1619426444794},{"path":"/Users/ramtinhafezinejad/Documents/Bachelor/Saman/Ramtin-Saman-Vue/forgerynewstrackervue/frontend/node_modules/vue-loader-v16/dist/index.js","mtime":1619426455942}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY3JlYXRlQ29tbWVudFZOb2RlIGFzIF9jcmVhdGVDb21tZW50Vk5vZGUsIGNyZWF0ZVZOb2RlIGFzIF9jcmVhdGVWTm9kZSwgb3BlbkJsb2NrIGFzIF9vcGVuQmxvY2ssIGNyZWF0ZUJsb2NrIGFzIF9jcmVhdGVCbG9jaywgdk1vZGVsVGV4dCBhcyBfdk1vZGVsVGV4dCwgd2l0aERpcmVjdGl2ZXMgYXMgX3dpdGhEaXJlY3RpdmVzLCBGcmFnbWVudCBhcyBfRnJhZ21lbnQsIHdpdGhTY29wZUlkIGFzIF93aXRoU2NvcGVJZCwgcHVzaFNjb3BlSWQgYXMgX3B1c2hTY29wZUlkLCBwb3BTY29wZUlkIGFzIF9wb3BTY29wZUlkIH0gZnJvbSAidnVlIjsKCnZhciBfd2l0aElkID0gLyojX19QVVJFX18qL193aXRoU2NvcGVJZCgiZGF0YS12LTFjMGQ5YzA4Iik7CgpfcHVzaFNjb3BlSWQoImRhdGEtdi0xYzBkOWMwOCIpOwoKdmFyIF9ob2lzdGVkXzEgPSB7CiAgY2xhc3M6ICJjb250YWluZXIiCn07Cgp2YXIgX2hvaXN0ZWRfMiA9IC8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoImxhYmVsIiwgbnVsbCwgIkNvZGUiLCAtMQovKiBIT0lTVEVEICovCik7Cgp2YXIgX2hvaXN0ZWRfMyA9IC8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoImJyIiwgbnVsbCwgbnVsbCwgLTEKLyogSE9JU1RFRCAqLwopOwoKdmFyIF9ob2lzdGVkXzQgPSAvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJiciIsIG51bGwsIG51bGwsIC0xCi8qIEhPSVNURUQgKi8KKTsKCl9wb3BTY29wZUlkKCk7CgpleHBvcnQgdmFyIHJlbmRlciA9IC8qI19fUFVSRV9fKi9fd2l0aElkKGZ1bmN0aW9uIChfY3R4LCBfY2FjaGUsICRwcm9wcywgJHNldHVwLCAkZGF0YSwgJG9wdGlvbnMpIHsKICByZXR1cm4gX29wZW5CbG9jaygpLCBfY3JlYXRlQmxvY2soImRpdiIsIF9ob2lzdGVkXzEsIFtfY3JlYXRlQ29tbWVudFZOb2RlKCIgdGhpcyBob3cgdSBwdXQgaW1hZ2VzIGluIHNpdGUgIiksIF9jcmVhdGVDb21tZW50Vk5vZGUoIiA8aW1nIHNyYz1cIi4uYXNzZXRzL0ZvcmdlcnlfTmV3c190cmFja2VyX05FVy5wbmdcIiB3aWR0aD1cIjUwMHB4XCIgaGVpZ2h0PVwiNTAwcHhcIj48YnI+ICIpLCBfY3JlYXRlQ29tbWVudFZOb2RlKCIgPGRpdiBpZD1cInVzZXJzX2xpc3RcIj4gXG4gICAgICA8dWw+ICAgICAgICBcbiAgICAgICAgPGxpIHYtZm9yPVwidSBvZiB1c2Vyc1wiIDprZXk9XCJ1Lm5hbWVcIj5cbiAgICAgICAgICB7eyB1Lm5hbWUgfX1cbiAgICAgICAgPC9saT4gICBcbiAgICAgIDwvdWw+XG4gICAgPC9kaXY+ICIpLCAkZGF0YS5jb2RlID09PSB1bmRlZmluZWQgPyAoX29wZW5CbG9jaygpLCBfY3JlYXRlQmxvY2soImJ1dHRvbiIsIHsKICAgIGtleTogMCwKICAgIGNsYXNzOiAiYnRuIGJnLXRyYW5zcGFyZW50IiwKICAgIG9uQ2xpY2s6IF9jYWNoZVsxXSB8fCAoX2NhY2hlWzFdID0gZnVuY3Rpb24gKCRldmVudCkgewogICAgICByZXR1cm4gJG9wdGlvbnMubG9naW4oKTsKICAgIH0pCiAgfSwgW19jcmVhdGVWTm9kZSgiaW1nIiwgewogICAgY2xhc3M6ICJ0d3QtcGljIiwKICAgIHNyYzogcmVxdWlyZSgnLi4vYXNzZXRzL3R3aXR0ZXJfYnV0dG9uLnBuZycpCiAgfSwgbnVsbCwgOAogIC8qIFBST1BTICovCiAgLCBbInNyYyJdKV0pKSA6IChfb3BlbkJsb2NrKCksIF9jcmVhdGVCbG9jayhfRnJhZ21lbnQsIHsKICAgIGtleTogMQogIH0sIFtfaG9pc3RlZF8yLCBfd2l0aERpcmVjdGl2ZXMoX2NyZWF0ZVZOb2RlKCJpbnB1dCIsIHsKICAgIHBsYWNlaG9sZGVyOiAiQ29kZSBmcm9tIHR3aXR0ZXIgbG9naW4gcGFnZSIsCiAgICAib25VcGRhdGU6bW9kZWxWYWx1ZSI6IF9jYWNoZVsyXSB8fCAoX2NhY2hlWzJdID0gZnVuY3Rpb24gKCRldmVudCkgewogICAgICByZXR1cm4gJGRhdGEuY29kZSA9ICRldmVudDsKICAgIH0pCiAgfSwgbnVsbCwgNTEyCiAgLyogTkVFRF9QQVRDSCAqLwogICksIFtbX3ZNb2RlbFRleHQsICRkYXRhLmNvZGVdXSksIF9jcmVhdGVWTm9kZSgiYnV0dG9uIiwgewogICAgc3R5bGU6IHsKICAgICAgIm1hcmdpbi10b3AiOiAiMjBweCIKICAgIH0sCiAgICBjbGFzczogImJ0biBidG4tcHJpbWFyeSIsCiAgICBvbkNsaWNrOiBfY2FjaGVbM10gfHwgKF9jYWNoZVszXSA9IGZ1bmN0aW9uICgkZXZlbnQpIHsKICAgICAgcmV0dXJuICRvcHRpb25zLnN1Ym1pdFZlcmlmaWVyQ29kZSgpOwogICAgfSkKICB9LCAiU3VibWl0IGNvZGUiKV0sIDY0CiAgLyogU1RBQkxFX0ZSQUdNRU5UICovCiAgKSksIF9jcmVhdGVWTm9kZSgiYnV0dG9uIiwgewogICAgc3R5bGU6IHsKICAgICAgIm1hcmdpbi10b3AiOiAiMjBweCIKICAgIH0sCiAgICBjbGFzczogImJ0biBidG4tcHJpbWFyeSIsCiAgICBvbkNsaWNrOiBfY2FjaGVbNF0gfHwgKF9jYWNoZVs0XSA9IGZ1bmN0aW9uICgkZXZlbnQpIHsKICAgICAgcmV0dXJuICRvcHRpb25zLmdvdG9QYWdlKCk7CiAgICB9KQogIH0sICJSZWRpcmVjdCB0byBZb3VyIFRyYWNrZXJzIiksIF9ob2lzdGVkXzMsIF9ob2lzdGVkXzRdKTsKfSk7"},{"version":3,"sources":["/Users/ramtinhafezinejad/Documents/Bachelor/Saman/Ramtin-Saman-Vue/forgerynewstrackervue/frontend/src/views/LandingPage.vue"],"names":[],"mappings":";;;;;;;AACK,EAAA,KAAK,EAAC;;;8BAcL,YAAA,CAAmB,OAAnB,EAAmB,IAAnB,EAAO,MAAP,EAAW,CAAA;AAAA;AAAX,C;;8BAI4G,YAAA,CAAI,IAAJ,EAAI,IAAJ,EAAI,IAAJ,EAAI,CAAA;AAAA;AAAJ,C;;8BAAI,YAAA,CAAI,IAAJ,EAAI,IAAJ,EAAI,IAAJ,EAAI,CAAA;AAAA;AAAJ,C;;;;;uBAlBtH,YAAA,CAmBQ,KAnBR,EAAA,UAAA,EAmBQ,CAlBJ,mBAAA,CAAA,iCAAA,CAkBI,EAjBJ,mBAAA,CAAA,4FAAA,CAiBI,EAhBJ,mBAAA,CAAA,sKAAA,CAgBI,EATY,KAAA,CAAA,IAAA,KAAS,S,kBACvB,YAAA,CAAiI,QAAjI,EAAiI;UAAA;AAAzH,IAAA,KAAK,EAAC,oBAAmH;AAA7F,IAAA,OAAK,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA,UAAA,MAAA;AAAA,aAAE,QAAA,CAAA,KAAA,EAAF;AAAA,KAAA;AAAwF,GAAjI,E,CAAoD,YAAA,CAAoE,KAApE,EAAoE;AAA/D,IAAA,KAAK,EAAC,SAAyD;AAA9C,IAAA,GAAG,EAAE,OAAO,CAAA,8BAAA;AAAkC,GAApE,E,IAAA,E;;AAAA,I,OAAA,C,CAApD,C,mBAEF,YAAA,CAIW,SAJX,EAIW;AAAA,IAAA,GAAA,EAAA;AAAA,GAJX,EAIW,CAHT,UAGS,E,gBAFT,YAAA,CAAiE,OAAjE,EAAiE;AAA1D,IAAA,WAAW,EAAC,8BAA8C;;aAAN,KAAA,CAAA,IAAA,GAAI,M;;AAAE,GAAjE,E,IAAA,E;;AAAA,G,iBAA2D,KAAA,CAAA,I,GAElD,EADT,YAAA,CAA0G,QAA1G,EAA0G;AAAlG,IAAA,KAAuB,EAAvB;AAAA,oBAAA;AAAA,KAAkG;AAA1E,IAAA,KAAK,EAAC,iBAAoE;AAAjD,IAAA,OAAK,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA,UAAA,MAAA;AAAA,aAAE,QAAA,CAAA,kBAAA,EAAF;AAAA,KAAA;AAA4C,GAA1G,EAAsF,aAAtF,CACS,CAJX,E;;AAAA,G,CAMI,EADJ,YAAA,CAA8G,QAA9G,EAA8G;AAAtG,IAAA,KAAuB,EAAvB;AAAA,oBAAA;AAAA,KAAsG;AAA9E,IAAA,KAAK,EAAC,iBAAwE;AAArD,IAAA,OAAK,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA,UAAA,MAAA;AAAA,aAAE,QAAA,CAAA,QAAA,EAAF;AAAA,KAAA;AAAgD,GAA9G,EAA4E,2BAA5E,CACI,EAD0G,UAC1G,EAD8G,UAC9G,CAnBR,C","sourcesContent":["<template>\n<div class=\"container\">\n    <!-- this how u put images in site -->\n    <!-- <img src=\"..assets/Forgery_News_tracker_NEW.png\" width=\"500px\" height=\"500px\"><br> -->\n    <!-- <div id=\"users_list\"> \n      <ul>        \n        <li v-for=\"u of users\" :key=\"u.name\">\n          {{ u.name }}\n        </li>   \n      </ul>\n    </div> -->\n    <template v-if=\"code === undefined\">\n      <button class=\"btn bg-transparent\" @click=\"login()\"><img class=\"twt-pic\" :src=\"require('../assets/twitter_button.png')\"></button>\n    </template>\n    <template v-else>\n      <label>Code</label>\n      <input placeholder=\"Code from twitter login page\" v-model=\"code\">\n      <button style=\"margin-top:20px\" class=\"btn btn-primary\" @click=\"submitVerifierCode()\">Submit code</button>\n    </template>\n    <button style=\"margin-top:20px\" class=\"btn btn-primary\" @click=\"gotoPage()\">Redirect to Your Trackers</button><br><br>\n  </div>\n\n\n</template>\n\n\n\n<script>\n// import Sidebar from '../components/Sidebar.vue';\nimport TwitterAPI from '../backend_api/twitter.js';\n\n\n\nexport default {\n    name: 'LandingPage',\n    components:{\n        // Sidebar,\n    },\n    data(){\n        return{\n          code: undefined,\n          codeResolver: undefined,\n          users: [\n              // {\n              //   name: \"Ram\"\n              // },\n            ]\n        }\n    },\n    methods: {\n    gotoPage(){\n      this.$router.push('/yourtrackers');\n    },\n    async login() {\n      let tc = new TwitterAPI();\n      await tc.getRequestToken()\n        .then(({request_key, request_secret}) => {\n          console.log(\"redirecting user to twitter signin page\");\n\n          // 2nd step of authentication, opens a new window for twitter auth..\n          window.open(`https://api.twitter.com/oauth/authorize?oauth_token=${request_key}`, \"_blank\");\n          // setting to `\"\"` will change the view so to accept a code.\n          this.code = \"\";\n          return {request_key, request_secret};\n        })\n        .then(token => Promise.all([token, new Promise((resolve) => this.codeResolver = resolve)]))\n\n        // 3rd step of authentication. \n        .then(([{request_key, request_secret}, verifier_code]) => tc.getAccessToken(request_key, request_secret, verifier_code))\n        .then(({access_key, access_secret}) => {\n          // now the login is completed, store the values in a localstorage.\n          console.log(access_key);\n          console.log(access_secret);\n          console.log(\"yaaay\");\n        });\n    },\n    submitVerifierCode() {\n      this.codeResolver(this.code);\n      this.code = undefined;\n    }\n  }\n\n}\n</script>\n\n<style scoped>\n  .sign-in{\n    width: 50px;\n  }\n  .twt-btn{\n    width: 50%;\n    height: auto;\n  }\n  img{\n    width: 45%;\n    height: auto;\n  }\n</style>"],"sourceRoot":""}]}