{"remainingRequest":"/Users/ramtinhafezinejad/Desktop/FNT-FRONTEND/node_modules/babel-loader/lib/index.js!/Users/ramtinhafezinejad/Desktop/FNT-FRONTEND/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/Users/ramtinhafezinejad/Desktop/FNT-FRONTEND/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/ramtinhafezinejad/Desktop/FNT-FRONTEND/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/ramtinhafezinejad/Desktop/FNT-FRONTEND/src/components/Twitter/Sigmagraph.vue?vue&type=template&id=0b0d8996&scoped=true","dependencies":[{"path":"/Users/ramtinhafezinejad/Desktop/FNT-FRONTEND/src/components/Twitter/Sigmagraph.vue","mtime":1620480669670},{"path":"/Users/ramtinhafezinejad/Desktop/FNT-FRONTEND/node_modules/cache-loader/dist/cjs.js","mtime":1619426444794},{"path":"/Users/ramtinhafezinejad/Desktop/FNT-FRONTEND/node_modules/babel-loader/lib/index.js","mtime":1619426444695},{"path":"/Users/ramtinhafezinejad/Desktop/FNT-FRONTEND/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1619426455942},{"path":"/Users/ramtinhafezinejad/Desktop/FNT-FRONTEND/node_modules/cache-loader/dist/cjs.js","mtime":1619426444794},{"path":"/Users/ramtinhafezinejad/Desktop/FNT-FRONTEND/node_modules/vue-loader-v16/dist/index.js","mtime":1619426455942}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY3JlYXRlVk5vZGUgYXMgX2NyZWF0ZVZOb2RlLCByZW5kZXJMaXN0IGFzIF9yZW5kZXJMaXN0LCBGcmFnbWVudCBhcyBfRnJhZ21lbnQsIG9wZW5CbG9jayBhcyBfb3BlbkJsb2NrLCBjcmVhdGVCbG9jayBhcyBfY3JlYXRlQmxvY2ssIHRvRGlzcGxheVN0cmluZyBhcyBfdG9EaXNwbGF5U3RyaW5nLCBjcmVhdGVDb21tZW50Vk5vZGUgYXMgX2NyZWF0ZUNvbW1lbnRWTm9kZSwgd2l0aFNjb3BlSWQgYXMgX3dpdGhTY29wZUlkLCBwdXNoU2NvcGVJZCBhcyBfcHVzaFNjb3BlSWQsIHBvcFNjb3BlSWQgYXMgX3BvcFNjb3BlSWQgfSBmcm9tICJ2dWUiOwoKdmFyIF93aXRoSWQgPSAvKiNfX1BVUkVfXyovX3dpdGhTY29wZUlkKCJkYXRhLXYtMGIwZDg5OTYiKTsKCl9wdXNoU2NvcGVJZCgiZGF0YS12LTBiMGQ4OTk2Iik7Cgp2YXIgX2hvaXN0ZWRfMSA9IHsKICBjbGFzczogIm5vZGVfYm94Igp9OwoKdmFyIF9ob2lzdGVkXzIgPSAvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJkaXYiLCB7CiAgY2xhc3M6ICJjaGFydGhlYWRlciIKfSwgWy8qI19fUFVSRV9fKi9fY3JlYXRlVk5vZGUoImgzIiwgbnVsbCwgIk5ldHdvcmsiKSwgLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgiZGl2IiwgewogIGNsYXNzOiAiaGVscC10aXAtY29udGFpbmVyIgp9LCBbLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgiZGl2IiwgewogIGNsYXNzOiAiaGVscC10aXAiCn0sIFsvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJwIiwgbnVsbCwgIk5vZGUgTmV0d29yayBpcyBhIHZpc3VhbGl6YXRpb24gb2Ygd2hvIGhhZCB0aGUgbW9zdCBpbXBhY3Qgb24gc3ByZWFkaW5nIHRoZSBkYXRhIGFuZCB0byB3aGljaCB1c2VyIGl0IGhhcyByZWFjaGVkLiBUaGUgYmlnZ2VyIHRoZSBOb2RlIGlzLCB0aGUgbW9yZSBmb2xsb3dlcnMgdGhlIHVzZXIgaGFzLiBDbGljayBvbiBhbnkgbm9kZSB0byBvcGVuIHVwIGluIFR3aXR0ZXIiKV0pXSldLCAtMQovKiBIT0lTVEVEICovCik7Cgp2YXIgX2hvaXN0ZWRfMyA9IHsKICBjbGFzczogIm5vZGVfY29udGFpbmVyIgp9Owp2YXIgX2hvaXN0ZWRfNCA9IHsKICBpZDogImdyYXBoIgp9OwoKX3BvcFNjb3BlSWQoKTsKCmV4cG9ydCB2YXIgcmVuZGVyID0gLyojX19QVVJFX18qL193aXRoSWQoZnVuY3Rpb24gKF9jdHgsIF9jYWNoZSwgJHByb3BzLCAkc2V0dXAsICRkYXRhLCAkb3B0aW9ucykgewogIHJldHVybiBfb3BlbkJsb2NrKCksIF9jcmVhdGVCbG9jaygiZGl2IiwgX2hvaXN0ZWRfMSwgW19ob2lzdGVkXzIsIF9jcmVhdGVWTm9kZSgiZGl2IiwgX2hvaXN0ZWRfMywgW19jcmVhdGVWTm9kZSgiZGl2IiwgX2hvaXN0ZWRfNCwgWyRvcHRpb25zLmJvdW5kcy5taW5YID8gKF9vcGVuQmxvY2soKSwgX2NyZWF0ZUJsb2NrKCJzdmciLCB7CiAgICBrZXk6IDAsCiAgICB4bWxuczogImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiwKICAgIHdpZHRoOiBfY3R4LndpZHRoICsgJ3B4JywKICAgIGhlaWdodDogX2N0eC5oZWlnaHQgKyAncHgnLAogICAgb25Nb3VzZW1vdmU6IF9jYWNoZVsxXSB8fCAoX2NhY2hlWzFdID0gZnVuY3Rpb24gKCRldmVudCkgewogICAgICByZXR1cm4gJG9wdGlvbnMuZHJhZygkZXZlbnQpOwogICAgfSksCiAgICBvbk1vdXNldXA6IF9jYWNoZVsyXSB8fCAoX2NhY2hlWzJdID0gZnVuY3Rpb24gKCRldmVudCkgewogICAgICByZXR1cm4gJG9wdGlvbnMuZHJvcCgpOwogICAgfSksCiAgICBtZXNzYWdlczogewogICAgICBlbXB0eTogJ05vIGRhdGEnCiAgICB9CiAgfSwgWyhfb3BlbkJsb2NrKHRydWUpLCBfY3JlYXRlQmxvY2soX0ZyYWdtZW50LCBudWxsLCBfcmVuZGVyTGlzdChfY3R4LmdyYXBoLmxpbmtzLCBmdW5jdGlvbiAobGluaykgewogICAgcmV0dXJuIF9vcGVuQmxvY2soKSwgX2NyZWF0ZUJsb2NrKCJsaW5lIiwgewogICAgICB4MTogJG9wdGlvbnMuY29vcmRzW2xpbmsuc291cmNlLmluZGV4XS54LAogICAgICB5MTogJG9wdGlvbnMuY29vcmRzW2xpbmsuc291cmNlLmluZGV4XS55LAogICAgICB4MjogJG9wdGlvbnMuY29vcmRzW2xpbmsudGFyZ2V0LmluZGV4XS54LAogICAgICB5MjogJG9wdGlvbnMuY29vcmRzW2xpbmsudGFyZ2V0LmluZGV4XS55LAogICAgICBzdHJva2U6ICIjYWFhIiwKICAgICAgInN0cm9rZS13aWR0aCI6ICIxIiwKICAgICAga2V5OiBsaW5rCiAgICB9LCBudWxsLCA4CiAgICAvKiBQUk9QUyAqLwogICAgLCBbIngxIiwgInkxIiwgIngyIiwgInkyIl0pOwogIH0pLCAxMjgKICAvKiBLRVlFRF9GUkFHTUVOVCAqLwogICkpLCAoX29wZW5CbG9jayh0cnVlKSwgX2NyZWF0ZUJsb2NrKF9GcmFnbWVudCwgbnVsbCwgX3JlbmRlckxpc3QoX2N0eC5ncmFwaC5ub2RlcywgZnVuY3Rpb24gKG5vZGUsIGkpIHsKICAgIHJldHVybiBfb3BlbkJsb2NrKCksIF9jcmVhdGVCbG9jaygiZyIsIHsKICAgICAgY2xhc3M6ICJpdGVtIiwKICAgICAgdHJhbnNmb3JtOiAidHJhbnNsYXRlKDAsIDApIiwKICAgICAga2V5OiBpCiAgICB9LCBbKF9vcGVuQmxvY2soKSwgX2NyZWF0ZUJsb2NrKCJjaXJjbGUiLCB7CiAgICAgIGNsYXNzOiAibm9kZSBjaXJjbGUtbm9kZSIsCiAgICAgIGN4OiAkb3B0aW9ucy5jb29yZHNbaV0ueCwKICAgICAgY3k6ICRvcHRpb25zLmNvb3Jkc1tpXS55LAogICAgICByOiBfY3R4LmdyYXBoLm5vZGVzW2ldLnNpemUsCiAgICAgIGZpbGw6IF9jdHguY29sb3JzW01hdGguY2VpbChNYXRoLnNxcnQobm9kZS5pbmRleCkpXSwKICAgICAgc3Ryb2tlOiAid2hpdGUiLAogICAgICAic3Ryb2tlLXdpZHRoIjogIjEiLAogICAgICBvbk1vdXNlZG93bjogZnVuY3Rpb24gb25Nb3VzZWRvd24oJGV2ZW50KSB7CiAgICAgICAgcmV0dXJuIF9jdHguY3VycmVudE1vdmUgPSB7CiAgICAgICAgICB4OiAkZXZlbnQuc2NyZWVuWCwKICAgICAgICAgIHk6ICRldmVudC5zY3JlZW5ZLAogICAgICAgICAgbm9kZTogbm9kZQogICAgICAgIH07CiAgICAgIH0sCiAgICAgIGtleTogaQogICAgfSwgbnVsbCwgNDAKICAgIC8qIFBST1BTLCBIWURSQVRFX0VWRU5UUyAqLwogICAgLCBbImN4IiwgImN5IiwgInIiLCAiZmlsbCIsICJvbk1vdXNlZG93biJdKSksIF9jcmVhdGVWTm9kZSgidGV4dCIsIHsKICAgICAgY2xhc3M6IFsibm9kZS10ZXh0IiwgewogICAgICAgICd0ZXh0LWFjdGl2ZSc6IF9jdHguc2hvd0luZGV4ID09PSBpCiAgICAgIH1dLAogICAgICB4OiAkb3B0aW9ucy5jb29yZHNbaV0ueCwKICAgICAgeTogJG9wdGlvbnMuY29vcmRzW2ldLnksCiAgICAgIG9uTW91c2VvdmVyOiBmdW5jdGlvbiBvbk1vdXNlb3ZlcigkZXZlbnQpIHsKICAgICAgICByZXR1cm4gX2N0eC5zaG93SW5kZXggPSBpOwogICAgICB9LAogICAgICBvbkNsaWNrOiBmdW5jdGlvbiBvbkNsaWNrKCRldmVudCkgewogICAgICAgIHJldHVybiAkb3B0aW9ucy5nb3Rvd2VicGFnZShub2RlLmlkKTsKICAgICAgfQogICAgfSwgX3RvRGlzcGxheVN0cmluZyhub2RlLmlkKSwgNDMKICAgIC8qIFRFWFQsIENMQVNTLCBQUk9QUywgSFlEUkFURV9FVkVOVFMgKi8KICAgICwgWyJ4IiwgInkiLCAib25Nb3VzZW92ZXIiLCAib25DbGljayJdKV0pOwogIH0pLCAxMjgKICAvKiBLRVlFRF9GUkFHTUVOVCAqLwogICkpXSwgNDAKICAvKiBQUk9QUywgSFlEUkFURV9FVkVOVFMgKi8KICAsIFsid2lkdGgiLCAiaGVpZ2h0Il0pKSA6IF9jcmVhdGVDb21tZW50Vk5vZGUoInYtaWYiLCB0cnVlKV0pXSldKTsKfSk7"},{"version":3,"sources":["/Users/ramtinhafezinejad/Desktop/FNT-FRONTEND/src/components/Twitter/Sigmagraph.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n\n<div class=\"node_box\">\n \n    <div class=\"chartheader\">\n      <h3>Network</h3>\n            <div class=\"help-tip-container\">\n                <div class=\"help-tip\">\n                  <p>Node Network is a visualization of who had the most impact on spreading the data and to which user it has reached. The bigger the Node is, the more followers the user has. Click on any node to open up in Twitter</p>\n                </div>\n            </div>\n    </div>\n\n<div class=\"node_container\">\n<div id=\"graph\">\n  <svg xmlns=\"http://www.w3.org/2000/svg\" \n       :width=\"width+'px'\"\n       :height=\"height+'px'\"\n       @mousemove=\"drag($event)\"\n       @mouseup=\"drop()\"\n       v-if=\"bounds.minX\"\n       :messages=\"{empty: 'No data'}\"\n       >\n    \n    <line v-for=\"link in graph.links\"\n          :x1=\"coords[link.source.index].x\"\n          :y1=\"coords[link.source.index].y\"\n          :x2=\"coords[link.target.index].x\"\n          :y2=\"coords[link.target.index].y\"\n          stroke=\"#aaa\" stroke-width=\"1\" v-bind:key=\"link\"/>\n\n    <g class=\"item\" transform=\"translate(0, 0)\" v-for=\"(node, i) in graph.nodes\"\n    :key=\"i\"\n    > \n      <circle class=\"node circle-node\" \n              :cx=\"coords[i].x\"\n              :cy=\"coords[i].y\"\n              :r=\"graph.nodes[i].size\" :fill=\"colors[Math.ceil(Math.sqrt(node.index))]\"\n              stroke=\"white\" stroke-width=\"1\"\n              @mousedown=\"currentMove = {x: $event.screenX, y: $event.screenY, node: node}\" v-bind:key=\"i\"\n            \n              />\n      <text\n      class=\"node-text\"\n      :x=\"coords[i].x\"\n      :y=\"coords[i].y\"\n      @mouseover=\"showIndex = i\"\n      @click=\"gotowebpage(node.id)\"\n      :class=\"{'text-active': showIndex === i}\"\n      >{{node.id}}</text>\n    </g>\n  </svg>\n</div>\n</div>\n\n</div>\n</template>\n\n\n<script>\nimport * as d3 from \"d3\";\n\nexport default {\n  el: \"#graph\",\n  props:['listdata'],\n  data: function(){\n    return{\n    graph: {\n      nodes: this.listdata.nodes,\n      links: this.listdata.links\n    },\n    width: 500,\n    height: 400,\n    padding: 20,\n    colors: ['#696969','#696969','#696969','#696969','#696969','#696969','#696969','#696969', '#696969', '#696969', '#696969', '#696969', '#696969', '#696969', '#696969', '#696969'],\n    simulation: null,\n    currentMove: null,\n    label: null,\n    showIndex: 0\n    }\n  },\n  computed: {\n    nodes(){\n      //this.changenodes(this.$store.state.nodes)\n      //return this.$store.state.nodes\n      return {}\n    },\n    links(){\n      //this.changelinks(this.$store.state.links)\n      //return this.$store.state.links\n      return {}\n    },\n    bounds() {\n      return {\n        minX: Math.min(...this.graph.nodes.map(n => n.x)),\n        maxX: Math.max(...this.graph.nodes.map(n => n.x)),\n        minY: Math.min(...this.graph.nodes.map(n => n.y)),\n        maxY: Math.max(...this.graph.nodes.map(n => n.y))\n      }\n    },\n    coords() {\n      return this.graph.nodes.map(node => {\n        return {\n          x: this.padding + (node.x - this.bounds.minX) * (this.width - 5*this.padding) / (this.bounds.maxX - this.bounds.minX),\n          y: this.padding + (node.y - this.bounds.minY) * (this.height - 2*this.padding) / (this.bounds.maxY - this.bounds.minY)\n        }\n      })\n    }   \n  },\n  created(){\n     this.simulation = d3.forceSimulation(this.graph.nodes)\n        .force('charge', d3.forceManyBody().strength(-100))\n        .force('link', d3.forceLink(this.graph.links).id(function(d) { return d.id;}))\n        .force('x', d3.forceX())\n        .force('y', d3.forceY())\n    this.createTextNodes() \n  },\n  methods: {\n    drag(e) {\n      if (this.currentMove) {\n        this.currentMove.node.fx = this.currentMove.node.x - (this.currentMove.x - e.screenX) * (this.bounds.maxX - this.bounds.minX) / (this.width - 2 * this.padding)\n        this.currentMove.node.fy = this.currentMove.node.y -(this.currentMove.y - e.screenY) * (this.bounds.maxY - this.bounds.minY) / (this.height - 2 * this.padding)\n        this.currentMove.x = e.screenX\n        this.currentMove.y = e.screenY\n      }\n    },\n    drop(){\n      delete this.currentMove.node.fx\n      delete this.currentMove.node.fy    \n      this.currentMove = null\n      this.simulation.alpha(1)\n      this.simulation.restart()\n    },\n    changenodes(newnodes){\n      this.graph.nodes = newnodes\n    },\n    changelinks(newlinks){\n      this.graph.links = newlinks\n      \n    },\n    addLabel(nodes){\n      for (let i in nodes){\n        nodes[i].append(\"text\")\n        .text(function(d) {\n        return d.id;\n      })\n      .attr('x', 6)\n      .attr('y', 3);\n      }\n    },\n    createTextNodes() {\n      let nodes = d3.selectAll(\"circle\");\n      console.log(nodes);\n      if (nodes.length > 0) {\n        nodes.forEach(node => {\n        let n = node.append(\"svg\").attr(\"width\", 10).attr(\"height\", 10); \n        n.append(\"text\")\n        .attr('x', 10)\n        .attr('y', 10)\n        .attr('stroke', 'green')\n        .style(\"font-size\", 11)\n        .text(\"text\")\n      });  \n      }\n    },\n    gotowebpage(username){\n      window.open(`https://www.twitter.com/${username}`)\n    }\n  }\n}\n\n</script>\n\n<style scoped>\n\n.chartheader{\n    height: 45px;\n    display: flex;\n}\n.chartheader h3{\n    font-weight: 900;\n    font-size: 1.25em;\n    line-height: 1.5;\n}\n\n.node-text {\n  opacity: 0;\n}\n.text-active {\n  opacity: 1;\n}\n.node_container{\n  border: 1px solid #dddfea;\n  align-items: center;\n  height: 450px;\n  padding-top: 25px;\n  padding-left: 55px;\n  \n}\n\n.graph{\npadding-left: 30px;\n\n}\n\n.header{\n  display: flex;\n  padding: 10px;\n  font-family: Quicksand,Helvetica,Arial,sans-serif;\n  font-weight: 900;\n  font-size: 1.25em;\n  line-height: 1.5;\n  color: #26293c;\n}\n\n</style>"],"sourceRoot":""}]}